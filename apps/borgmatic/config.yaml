location:
  source_directories:
    - /mnt/source  # 🔍 Path inside container to be backed up (mapped from /opt/docker on host)

  repositories:
    - path: ${BORG_REPO_URL}  # 📦 Remote repository (BorgBase); filled from .env file
      label: borgbase          # 🏷️ Friendly label for your repo (used for clarity in logs)
      storage_quota: 10G       # ℹ️ Optional, informative; helps keep track of repo usage

  one_file_system: true  # 🚫 Prevent backup from crossing into other filesystems (protects /proc, /sys, etc.)

  exclude_patterns:  # ❌ Skip paths you don’t want to back up
    - /mnt/source/data/stremthru/imdb         # Skips IMDb metadata folder (temporary)
    - /mnt/source/data/stremthru/hashlists    # Skips hashlist cache (can be regenerated)
    - /mnt/source/data/stremio-server         # Skips stremio server directory (optional)

storage:
  encryption_passphrase: null  # 🔐 Leave null here; passphrase is pulled from BORG_PASSPHRASE env var
  compression: lz4             # ⚡ Fast and efficient compression (balanced for performance and space)
  archive_name_format: 'backup-{now:%Y-%m-%d_%H-%M-%S}'  # 🧾 Unique archive name with date & time
  numeric_owner: true          # 👤 Store UID/GID instead of usernames (safer across systems)
  read_special: false          # 🚫 Don’t back up special device files like /dev/null

retention:  # ♻️ Controls how many old backups to keep
  keep_daily: 0     # Don’t keep daily snapshots
  keep_weekly: 2    # Only last 2 weekly backups (ideal for limited storage)
  keep_monthly: 0   # No monthly backups
  keep_yearly: 0    # No yearly backups

consistency:
  checks:  # 🔍 Automatically verify your backup integrity
    - name: repository
      frequency: weekly     # 🗓️ Validate repo structure once a week
    - name: archives
      frequency: always     # ✅ Verify new backup archives every time after creation

output:
  verbosity: 1              # 📋 Show basic logs (0 = quiet, 2 = verbose)
  color: true               # 🌈 Pretty colorized logs in console
  log_json: true            # 🧾 Structured logs in JSON (useful for external log processors)
  stats_json: true          # 📊 Output JSON stats (size, duration, files)
